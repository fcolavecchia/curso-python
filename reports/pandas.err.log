Traceback (most recent call last):
  File "/opt/miniconda3/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/miniconda3/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/miniconda3/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/miniconda3/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/miniconda3/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/miniconda3/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/miniconda3/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/miniconda3/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
perfiles = pandas.read_excel("CrossPlane_100x100.xlsx", sheet_name=None)

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Cell [0;32mIn[3], line 1[0m
[0;32m----> 1[0m perfiles [38;5;241m=[39m [43mpandas[49m[38;5;241;43m.[39;49m[43mread_excel[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mCrossPlane_100x100.xlsx[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43msheet_name[49m[38;5;241;43m=[39;49m[38;5;28;43;01mNone[39;49;00m[43m)[49m

File [0;32m/opt/miniconda3/lib/python3.9/site-packages/pandas/util/_decorators.py:211[0m, in [0;36mdeprecate_kwarg.<locals>._deprecate_kwarg.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    209[0m     [38;5;28;01melse[39;00m:
[1;32m    210[0m         kwargs[new_arg_name] [38;5;241m=[39m new_arg_value
[0;32m--> 211[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/miniconda3/lib/python3.9/site-packages/pandas/util/_decorators.py:331[0m, in [0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper[0;34m(*args, **kwargs)[0m
[1;32m    325[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(args) [38;5;241m>[39m num_allow_args:
[1;32m    326[0m     warnings[38;5;241m.[39mwarn(
[1;32m    327[0m         msg[38;5;241m.[39mformat(arguments[38;5;241m=[39m_format_argument_list(allow_args)),
[1;32m    328[0m         [38;5;167;01mFutureWarning[39;00m,
[1;32m    329[0m         stacklevel[38;5;241m=[39mfind_stack_level(),
[1;32m    330[0m     )
[0;32m--> 331[0m [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[38;5;241;43m*[39;49m[43margs[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m/opt/miniconda3/lib/python3.9/site-packages/pandas/io/excel/_base.py:482[0m, in [0;36mread_excel[0;34m(io, sheet_name, header, names, index_col, usecols, squeeze, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, thousands, decimal, comment, skipfooter, convert_float, mangle_dupe_cols, storage_options)[0m
[1;32m    480[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(io, ExcelFile):
[1;32m    481[0m     should_close [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[0;32m--> 482[0m     io [38;5;241m=[39m [43mExcelFile[49m[43m([49m[43mio[49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m[43m [49m[43mengine[49m[38;5;241;43m=[39;49m[43mengine[49m[43m)[49m
[1;32m    483[0m [38;5;28;01melif[39;00m engine [38;5;129;01mand[39;00m engine [38;5;241m!=[39m io[38;5;241m.[39mengine:
[1;32m    484[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    485[0m         [38;5;124m"[39m[38;5;124mEngine should not be specified when passing [39m[38;5;124m"[39m
[1;32m    486[0m         [38;5;124m"[39m[38;5;124man ExcelFile - ExcelFile already has the engine set[39m[38;5;124m"[39m
[1;32m    487[0m     )

File [0;32m/opt/miniconda3/lib/python3.9/site-packages/pandas/io/excel/_base.py:1652[0m, in [0;36mExcelFile.__init__[0;34m(self, path_or_buffer, engine, storage_options)[0m
[1;32m   1650[0m     ext [38;5;241m=[39m [38;5;124m"[39m[38;5;124mxls[39m[38;5;124m"[39m
[1;32m   1651[0m [38;5;28;01melse[39;00m:
[0;32m-> 1652[0m     ext [38;5;241m=[39m [43minspect_excel_format[49m[43m([49m
[1;32m   1653[0m [43m        [49m[43mcontent_or_path[49m[38;5;241;43m=[39;49m[43mpath_or_buffer[49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m
[1;32m   1654[0m [43m    [49m[43m)[49m
[1;32m   1655[0m     [38;5;28;01mif[39;00m ext [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1656[0m         [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m   1657[0m             [38;5;124m"[39m[38;5;124mExcel file format cannot be determined, you must specify [39m[38;5;124m"[39m
[1;32m   1658[0m             [38;5;124m"[39m[38;5;124man engine manually.[39m[38;5;124m"[39m
[1;32m   1659[0m         )

File [0;32m/opt/miniconda3/lib/python3.9/site-packages/pandas/io/excel/_base.py:1525[0m, in [0;36minspect_excel_format[0;34m(content_or_path, storage_options)[0m
[1;32m   1522[0m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(content_or_path, [38;5;28mbytes[39m):
[1;32m   1523[0m     content_or_path [38;5;241m=[39m BytesIO(content_or_path)
[0;32m-> 1525[0m [38;5;28;01mwith[39;00m [43mget_handle[49m[43m([49m
[1;32m   1526[0m [43m    [49m[43mcontent_or_path[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mrb[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mstorage_options[49m[38;5;241;43m=[39;49m[43mstorage_options[49m[43m,[49m[43m [49m[43mis_text[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m
[1;32m   1527[0m [43m[49m[43m)[49m [38;5;28;01mas[39;00m handle:
[1;32m   1528[0m     stream [38;5;241m=[39m handle[38;5;241m.[39mhandle
[1;32m   1529[0m     stream[38;5;241m.[39mseek([38;5;241m0[39m)

File [0;32m/opt/miniconda3/lib/python3.9/site-packages/pandas/io/common.py:865[0m, in [0;36mget_handle[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)[0m
[1;32m    856[0m         handle [38;5;241m=[39m [38;5;28mopen[39m(
[1;32m    857[0m             handle,
[1;32m    858[0m             ioargs[38;5;241m.[39mmode,
[0;32m   (...)[0m
[1;32m    861[0m             newline[38;5;241m=[39m[38;5;124m"[39m[38;5;124m"[39m,
[1;32m    862[0m         )
[1;32m    863[0m     [38;5;28;01melse[39;00m:
[1;32m    864[0m         [38;5;66;03m# Binary mode[39;00m
[0;32m--> 865[0m         handle [38;5;241m=[39m [38;5;28;43mopen[39;49m[43m([49m[43mhandle[49m[43m,[49m[43m [49m[43mioargs[49m[38;5;241;43m.[39;49m[43mmode[49m[43m)[49m
[1;32m    866[0m     handles[38;5;241m.[39mappend(handle)
[1;32m    868[0m [38;5;66;03m# Convert BytesIO or file objects passed with an encoding[39;00m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: 'CrossPlane_100x100.xlsx'
FileNotFoundError: [Errno 2] No such file or directory: 'CrossPlane_100x100.xlsx'

